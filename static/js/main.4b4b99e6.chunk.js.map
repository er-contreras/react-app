{"version":3,"sources":["logic/operate.js","components/Calculator.js","logic/calculate.js","App.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","mod","Error","Calculator","useState","total","next","initialState","updateState","handleClick","buttonName","obj","match","includes","parseFloat","calculate","id","updateDisplay","onClick","type","className","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b4b99e6.chunk.js","sourcesContent":["import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n\n  if (operation === 'รท') {\n    if (numberTwo === '0') {\n      return 'Math ERROR';\n    }\n    return one.div(two).toString();\n  }\n\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React, { useState } from 'react';\nimport './Calculator.css';\nimport calculate from '../logic/calculate';\n\nconst Calculator = () => {\n  const [initialState, updateState] = useState({ total: null, next: null, operation: null });\n\n  const handleClick = (buttonName) => {\n    const { total, next, operation } = calculate(initialState, buttonName);\n    updateState({ total, next, operation });\n  };\n\n  const updateDisplay = () => {\n    let { total, next, operation } = initialState;\n    total = total || '';\n    operation = operation || '';\n    next = next || '';\n    return `${total} ${operation} ${next}`;\n  };\n\n  return (\n    <div id=\"calc-container\">\n      <div id=\"output\">\n        {updateDisplay()}\n      </div>\n      <button onClick={() => handleClick('AC')} type=\"button\" className=\"ac\">AC</button>\n      <button onClick={() => handleClick('+/-')} type=\"button\" className=\"quantity\">+/-</button>\n      <button onClick={() => handleClick('%')} type=\"button\" className=\"percentage-operator\">%</button>\n      <button onClick={() => handleClick('รท')} type=\"button\" className=\"divide-operator\">รท</button>\n      <button onClick={() => handleClick('7')} type=\"button\" className=\"number\">7</button>\n      <button onClick={() => handleClick('8')} type=\"button\" className=\"number\">8</button>\n      <button onClick={() => handleClick('9')} type=\"button\" className=\"number\">9</button>\n      <button onClick={() => handleClick('x')} type=\"button\" className=\"multiply-operator\">x</button>\n      <button onClick={() => handleClick('4')} type=\"button\" className=\"number\">4</button>\n      <button onClick={() => handleClick('5')} type=\"button\" className=\"number\">5</button>\n      <button onClick={() => handleClick('6')} type=\"button\" className=\"number\">6</button>\n      <button onClick={() => handleClick('-')} type=\"button\" className=\"subtract-operator\">-</button>\n      <button onClick={() => handleClick('1')} type=\"button\" className=\"number\">1</button>\n      <button onClick={() => handleClick('2')} type=\"button\" className=\"number\">2</button>\n      <button onClick={() => handleClick('3')} type=\"button\" className=\"number\">3</button>\n      <button onClick={() => handleClick('+')} type=\"button\" className=\"add-operator\">+</button>\n      <button onClick={() => handleClick('0')} type=\"button\" id=\"zero\" className=\"number\">0</button>\n      <button onClick={() => handleClick('.')} type=\"button\" className=\"number\">.</button>\n      <button onClick={() => handleClick('=')} type=\"button\" className=\"equals\">=</button>\n    </div>\n  );\n};\n\nexport default Calculator;\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { ...obj, next: obj.next + buttonName };\n      }\n      return { ...obj, next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return { ...obj };\n      }\n      return { ...obj, next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    if (obj.total && !obj.next) {\n      return { ...obj, operation: buttonName };\n    }\n\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import React from 'react';\nimport './App.css';\nimport Calculator from './components/Calculator';\n\nconst App = () => (\n  <div className=\"App\">\n    <Calculator />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}